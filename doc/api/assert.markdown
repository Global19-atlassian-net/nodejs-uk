# Assert

    Стабільність: 5 - API зафіксовано
    

Даний модуль використовується для написання модульних тестів для ваших програм, ви можете отримати до нього доступ за допомогою `require('assert')`.

## assert.fail(фактичне, очікуване, повідомлення, оператор)

Виникне виняток з повідомленням, що буде містити `фактичне` та `очікуване` значення, а також оператор порівняння.

## assert(значення[, повідомлення]), assert.ok(значення[, повідомлення])

Перевірка значення на істину, це еквівалентно наступному коду `assert.equal(true, !!значення, повідомлення);`

## assert.equal(фактичне, очікуване[, повідомлення])

Перевірка на рівність, поверхнева перевірка двох значень за допомогою оператора рівності( `==` ).

## assert.notEqual(фактичне, очікуване[, повідомлення])

Перевірка на нерівність, поверхнева перевірка двох значень за допомогою оператора нерівності( `!=` ).

## assert.deepEqual (фактичне, очікуване[, повідомлення])

Перевірка рівності двох значень з перевіркою вмісту. Для примітивних значень використовується оператор поверхневої рівності ( `==` ). Об'єкти прототипів не враховуються.

## assert.notDeepEqual (фактичне, очікуване[, повідомлення])

Протилежний методу `assert.deepEqual`.

## assert.strictEqual (фактичне, очікуване[, повідомлення])

Перевірка точної рівності значень за допомогою оператора (`===`)

## assert.notStrictEqual (фактичне, очікуване[, повідомлення])

Перевірка не точної відповідності за допомогою оператора (`!==`)

## assert.deepStrictEqual(фактичне, очікуване[, повідомлення])

Перевірка точної рівності двох значень з перевіркою вмісту. Для примітивних значень використовується оператор точної рівності ( `===` ).

## assert.notDeepStrictEqual(фактичне, очікуване[, повідомлення])

Перевірка не точної рівності з урахування вмісту. Протилежний методу `assert.deepStrictEqual`.

## assert.throws(блок\[, помилка\]\[, повідомлення\])

Перевірка `блоку` на виникнення вийнятку. `помилка` може бути конструктором, `RegExp` або перевірочною функцією.

Перевірка екземпляру, використовуючи конструктор:

    assert.throws(
      function() {
        throw new Error("Не правильне значення");
      },
      Error
    );
    

Перевірка повідомлення помилки за допомогою RegExp:

    assert.throws(
      function() {
        throw new Error("Не вірне значення");
      },
      /значення/
    );
    

Довільна перевірка помилки:

    assert.throws(
      function() {
        throw new Error("Не вірне значення");
      },
      function(err) {
        if ( (err instanceof Error) && /значення/.test(err) ) {
          return true;
        }
      },
      "неочікувана помилка"
    );
    

## assert.doesNotThrow(блок[, повідомлення])

Перевірка `блоку` на виконання без виникнення вийнятку, детальніше `assert.throws`.

## assert.ifError(значення)

Перевірка значення на хибність, виникає вийняток, якщо значення істина. Може бути корисним для тестування першого аргументу `помилки` у функції зворотнього виклику.